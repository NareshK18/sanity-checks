name: Multi-Language CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      js: ${{ steps.filter.outputs.js }}
      java: ${{ steps.filter.outputs.java }}
      cpp: ${{ steps.filter.outputs.cpp }}
      rust: ${{ steps.filter.outputs.rust }}
      swift: ${{ steps.filter.outputs.swift }}
    steps:
      - uses: actions/checkout@v3
      - name: Filter changed paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            js:
              - '**/*.js'
              - '**/*.jsx'
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.vue'
            java:
              - '**/*.java'
            cpp:
              - '**/*.c'
              - '**/*.cpp'
              - '**/*.h'
              - '**/*.hpp'
            rust:
              - '**/*.rs'
            swift:
              - '**/*.swift'

  lint-js:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.js == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint. --ext .js,.jsx,.ts,.tsx,.vue --max-warnings=0
      - name: Run unit tests
        run: npm test
      - name: Build project
        run: npm run build

  lint-java:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.java == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Run unit tests
        run: mvn test
      - name: Build project
        run: mvn package

  lint-cpp:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.cpp == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install cppcheck
        run: sudo apt-get update && sudo apt-get install -y cppcheck build-essential
      - name: Run cppcheck
        run: cppcheck --enable=all --inconclusive --error-exitcode=1 .
      - name: Build project
        run: make || echo "Skip if no Makefile"
      - name: Run unit tests
        run: ./run_tests.sh || echo "Skip if no tests"

  lint-rust:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run unit tests
        run: cargo test
      - name: Build project
        run: cargo build --release

  lint-swift:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.swift == 'true' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install SwiftLint
        run: brew install swiftlint
      - name: Run SwiftLint
        run: swiftlint lint --strict
      - name: Build project
        run: swift build
      - name: Run unit tests
        run: swift test

  # label-success:
  #   needs: [lint-js, lint-java, lint-cpp, lint-rust, lint-swift]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Add 'Sanity Check' label to PR
  #       uses: actions-ecosystem/action-add-labels@v1
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         labels: Sanity Check
